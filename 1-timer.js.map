{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startButton = document.querySelector('button[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nlet userSelectedDate = null;\nlet countdownInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({ message: \"Please choose a date in the future\" });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  document.querySelector('#datetime-picker').disabled = true;\n  startCountdown();\n});\n\nfunction startCountdown() {\n  countdownInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n    if (timeRemaining <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay(0, 0, 0, 0);\n      document.querySelector('#datetime-picker').disabled = false;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startButton","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","startCountdown","timeRemaining","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"2GAKA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EAAmB,KACnBC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,EAChET,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EAErCP,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtDW,GACF,CAAC,EAED,SAASA,GAAiB,CACxBL,EAAoB,YAAY,IAAM,CACpC,MAAMM,EAAgBP,EAAmB,IAAI,KAC7C,GAAIO,GAAiB,EAAG,CACtB,cAAcN,CAAiB,EAC/BO,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7B,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,MACD,CACD,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EACjEC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,CACT,CAEA,SAASJ,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzDhB,EAAO,YAAckB,EAAeL,CAAI,EACxCZ,EAAQ,YAAciB,EAAeJ,CAAK,EAC1CZ,EAAU,YAAcgB,EAAeH,CAAO,EAC9CZ,EAAU,YAAce,EAAeF,CAAO,CAChD,CAEA,SAASC,EAAUE,EAAI,CAKrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}