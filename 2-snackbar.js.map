{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst radioFulfilled = document.querySelector('input[type=\"radio\"][name=\"state\"][value=\"fulfilled\"]');\nconst radioRejected = document.querySelector('input[type=\"radio\"][name=\"state\"][value=\"rejected\"]');\nconst notificationBtn = document.querySelector('button[type=submit]');\n\nfunction createPromise(isSuccess, delay) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (isSuccess) {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    });\n}\n\nfunction clearInputs() {\n    delayInput.value = '';\n    radioFulfilled.checked = false;\n    radioRejected.checked = false;\n}\n\nnotificationBtn.addEventListener(\"click\", event => {\n    event.preventDefault();\n\n    const delayValue = parseInt(delayInput.value);\n\n    if (!delayValue || delayValue <= 0) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please enter a valid delay',\n            position: 'topRight'\n        });\n        return;\n    }\n\n    let promise;\n    if (radioFulfilled.checked) {\n        promise = createPromise(true, delayValue);\n    } else if (radioRejected.checked) {\n        promise = createPromise(false, delayValue);\n    } else {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please select promise state',\n            position: 'topRight'\n        });\n        return;\n    }\n\n    promise\n        .then(delay => {\n            iziToast.success({\n                title: 'Success',\n                message: `Fulfilled promise in ${delay}ms`,\n                position: 'topRight'\n            });\n        })\n        .catch(delay => {\n            iziToast.error({\n                title: 'Error',\n                message: `Rejected promise in ${delay}ms`,\n                position: 'topRight'\n            });\n        })\n        .finally(() => {\n            clearInputs();\n        });\n});"],"names":["delayInput","radioFulfilled","radioRejected","notificationBtn","createPromise","isSuccess","delay","resolve","reject","clearInputs","event","delayValue","iziToast","promise"],"mappings":"oGAGA,MAAMA,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAiB,SAAS,cAAc,sDAAsD,EAC9FC,EAAgB,SAAS,cAAc,qDAAqD,EAC5FC,EAAkB,SAAS,cAAc,qBAAqB,EAEpE,SAASC,EAAcC,EAAWC,EAAO,CACrC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACTH,EACAE,EAAQD,CAAK,EAEbE,EAAOF,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,CACL,CAEA,SAASG,GAAc,CACnBT,EAAW,MAAQ,GACnBC,EAAe,QAAU,GACzBC,EAAc,QAAU,EAC5B,CAEAC,EAAgB,iBAAiB,QAASO,GAAS,CAC/CA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAASX,EAAW,KAAK,EAE5C,GAAI,CAACW,GAAcA,GAAc,EAAG,CAChCC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,6BACT,SAAU,UACtB,CAAS,EACD,MACH,CAED,IAAIC,EACJ,GAAIZ,EAAe,QACfY,EAAUT,EAAc,GAAMO,CAAU,UACjCT,EAAc,QACrBW,EAAUT,EAAc,GAAOO,CAAU,MACtC,CACHC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,8BACT,SAAU,UACtB,CAAS,EACD,MACH,CAEDC,EACK,KAAKP,GAAS,CACXM,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,wBAAwBN,CAAK,KACtC,SAAU,UAC1B,CAAa,CACb,CAAS,EACA,MAAMA,GAAS,CACZM,EAAS,MAAM,CACX,MAAO,QACP,QAAS,uBAAuBN,CAAK,KACrC,SAAU,UAC1B,CAAa,CACb,CAAS,EACA,QAAQ,IAAM,CACXG,GACZ,CAAS,CACT,CAAC"}